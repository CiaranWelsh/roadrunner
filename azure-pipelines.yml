# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: $(Date:yyyyMMdd)$(Rev:.r)
trigger:
  - master
  - develop
  - azure-tests

pr:
  - master
  - develop
  - azure-tests

stages:
  - stage: BuildCoreRoadrunner
    jobs:
      - job: BuildCoreRoadrunnerJob
        displayName: Linux
        continueOnError: "false"
        pool:
          vmImage: "ubuntu-18.04"
        #          demands:
        #            - cmake

        strategy:
          matrix:
            64-bit Linux Release:
              BuildType: Release
              SelfHost: false
              llvm_link: "https://github.com/sys-bio/llvm-6.x/releases/download/release%2F6.x/llvm-6.x-gcc7.5.0-x64-release.tar.gz"
              llvm_tar: "llvm-6.x-gcc7.5.0-x64-release.tar.gz"
              deps_link: "https://github.com/CiaranWelsh/roadrunner-deps/releases/download/v2.0.1/roadrunner-deps-gcc7.5-x64-release.tar.gz"
              deps_tar: "roadrunner-deps-gcc7.5-x64-release.tar.gz"
              CMakeArgs: "-DCMAKE_INSTALL_PREFIX=../install-azure-release -DLLVM_INSTALL_PREFIX=../roadrunner-deps-gcc7.5-x64-release -DRR_DEPENDENCIES_INSTALL_PREFIX=../llvm-6.x-gcc7.5.0-x64-release"

            64-bit Linux Debug:
              BuildType: Debug
              SelfHost: false
              llvm_link: "https://github.com/sys-bio/llvm-6.x/releases/download/release%2F6.x/llvm-6.x-gcc7.5.0-x64-debug.tar.gz"
              llvm_tar: "llvm-6.x-gcc7.5.0-x64-debug.tar.gz"
              deps_link: "https://github.com/CiaranWelsh/roadrunner-deps/releases/download/v2.0.1/roadrunner-deps-gcc7.5-x64-debug.tar.gz"
              deps_tar: "roadrunner-deps-gcc7.5-x64-debug.tar.gz"
              CMakeArgs: "-DCMAKE_INSTALL_PREFIX=../install-azure-debug -DLLVM_INSTALL_PREFIX=../roadrunner-deps-gcc7.5-x64-debug -DRR_DEPENDENCIES_INSTALL_PREFIX=../llvm-6.x-gcc7.5.0-x64-debug"

        steps:
          - script: |
              echo "current driectory is: "
              pwd
              echo "doing ls"
              ls -lh
              wget $(llvm_link)
              tar zxvf $(llvm_tar)
              ls
          - script: |
              echo "current driectory is: "
              pwd
              echo "doing ls"
              ls -lh
              wget $(deps_link)
              tar -zxvf $(deps_tar)
              ls
          - task: CMake@1
            displayName: ConfigureCommand
            inputs:
              cmakeArgs: $(CMakeArgs) -DCMAKE_BUILD_TYPE=$(BuildType)  ..
          - task: CMake@1
            displayName: BuildCommand
            inputs:
              cmakeArgs: --build . --target install --config $(BuildType) -j 12
          - script: |
              echo "Doing ls from: $(pwd)"
              ls -lh
              ctest build


          #          - script: |
          #              echo "current driectory is: "
          #              pwd
          #              echo "doing ls"
          #              ls -lh
          #              mkdir build
          #              cd build
          #              cmake $(CMakeArgs) -DRR_DEPENDENCIES_INSTALL_PREFIX="../roadrunner-deps-gcc7.5-x64-release" -DLLVM_INSTALL_PREFIX="../llvm-6.x-gcc7.5.0-x64-release" -DCMAKE_BUILD_TYPE=$(BuildType) ..
          #              cmake --build . --target install --config $(BuildType) -j 12

          #
          #  - stage: TestCoreRoadrunner
          #    jobs:
          #      - job: TestCoreRoadrunnerJob





          #
          #
          #  - stage: TestCMakeAvailability
          #    dependsOn: [ ]
          #    jobs:
          #      - job: TestCMakeAvailabilityJob
          #        continueOnError: "false"
          #        steps:
          #          - script: cmake --version







          #stages:
          #  pool:
          #    vmImage: 'ubuntu-18.04'
          #    - displayName: "Build"
          #  jobs:
          #    - job:
          #        - #jobs:
          #  - job: Windows
          #    pool:
          #      vmImage: 'vs2019-windows2019'
          #    steps:
          #      - script: echo hello from Windows
          #  - job: macOS
          #    pool:
          #      vmImage: 'macOS-10.15'
          #    steps:
          #      - script: echo hello from macOS

          #
          #    displayName: 'Build roadrunner dependencies on Linux'
          #    pool:
          #      vmImage: 'ubuntu-18.04'
          #    steps:
        #      - script: bash $(pwd)/ci/build-linux.sh

